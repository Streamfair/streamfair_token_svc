syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "token/rpc_create_token.proto";
import "token/rpc_delete_token_by_value.proto";
import "token/rpc_delete_token_by_id.proto";
import "token/rpc_revoke_token_by_id.proto";
import "token/rpc_revoke_token_by_value.proto";
import "token/rpc_list_revoked_tokens.proto";
import "token/rpc_get_token_by_id.proto";
import "token/rpc_get_token_by_value.proto";
import "token/rpc_list_tokens.proto";
import "token/rpc_update_token.proto";
import "token/rpc_verify_token.proto";

import "refresh_token/rpc_create_refresh_token.proto";
import "refresh_token/rpc_delete_refresh_token_by_value.proto";
import "refresh_token/rpc_delete_refresh_token_by_id.proto";
import "refresh_token/rpc_revoke_refresh_token_by_id.proto";
import "refresh_token/rpc_revoke_refresh_token_by_value.proto";
import "refresh_token/rpc_list_revoked_refresh_tokens.proto";
import "refresh_token/rpc_get_refresh_token_by_id.proto";
import "refresh_token/rpc_get_refresh_token_by_value.proto";
import "refresh_token/rpc_list_refresh_tokens.proto";
import "refresh_token/rpc_update_refresh_token.proto";
import "refresh_token/rpc_verify_refresh_token.proto";

option go_package = "github.com/Streamfair/streamfair_token_svc/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
	  title: "Streamfair Token Service";
	  version: "1.1";
	  contact: {
		name: "Streamfair";
		url: "https://github.com/Streamfair";
		email: "nelix@posteo.de";
	  };
	};
};

service TokenService {
	// Tokens
	rpc CreateToken(CreateTokenRequest) returns (CreateTokenResponse) {
		option (google.api.http) = {
			post: "/streamfair/v1/create_token"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "Create a new token.",
			summary: "Create Token"
		};
	}

	rpc GetTokenById(GetTokenByIdRequest) returns (GetTokenByIdResponse) {
		option (google.api.http) = {
			post: "/streamfair/v1/get_token_by_id"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "Get a token by its ID.",
			summary: "Get Token by ID"
		};
	}
	
	rpc GetTokenByValue(GetTokenByValueRequest) returns (GetTokenByValueResponse) {
		option (google.api.http) = {
			post: "/streamfair/v1/get_token_by_value"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "Get a token by its value.",
			summary: "Get Token by Value"
		};
	}

	rpc RevokeTokenByValue(RevokeTokenByValueRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/streamfair/v1/revoke_token_by_value"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "Revoke a token by its value.",
			summary: "Revoke Token by Value"
		};
	}

	rpc RevokeTokenById(RevokeTokenByIdRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/streamfair/v1/revoke_token_by_id"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "Revoke a token by its ID.",
			summary: "Revoke Token by ID"
		};
	}

	rpc DeleteTokenById(DeleteTokenByIdRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/streamfair/v1/delete_token_by_id"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "Delete a token by its ID.",
			summary: "Delete Token by ID"
		};
	}
	
	rpc DeleteTokenByValue(DeleteTokenByValueRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/streamfair/v1/delete_token_by_value"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "Delete a token by its value.",
			summary: "Delete Token by Value"
		};
	}
	
	rpc ListRevokedTokens(ListRevokedTokensRequest) returns (ListRevokedTokensResponse) {
		option (google.api.http) = {
			post: "/streamfair/v1/list_revoked_tokens"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "List all revoked tokens.",
			summary: "List Revoked Tokens"
		};
	}

	rpc ListTokens(ListTokensRequest) returns (ListTokensResponse) {
		option (google.api.http) = {
			post: "/streamfair/v1/list_tokens"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "List all tokens.",
			summary: "List Tokens"
		};
	}

	rpc UpdateToken(UpdateTokenRequest) returns (UpdateTokenResponse) {
		option (google.api.http) = {
			patch: "/streamfair/v1/update_token"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "Update a token.",
			summary: "Update Token"
		};
	}

	rpc VerifyToken(VerifyTokenRequest) returns (VerifyTokenResponse) {
		option (google.api.http) = {
			post: "/streamfair/v1/verify_token"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "Verify a token.",
			summary: "Verify Token"
		};
	}

	// Refresh tokens
	rpc CreateRefreshToken(CreateRefreshTokenRequest) returns (CreateRefreshTokenResponse) {
		option (google.api.http) = {
			post: "/streamfair/v1/create_refresh_token"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "Create a new refresh token.",
			summary: "Create Refresh Token"
		};
	}

	rpc GetRefreshTokenById(GetRefreshTokenByIdRequest) returns (GetRefreshTokenByIdResponse) {
		option (google.api.http) = {
			post: "/streamfair/v1/get_refresh_token_by_id"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "Get a refresh token by its ID.",
			summary: "Get Refresh Token by ID"
		};
	}
	
	rpc GetRefreshTokenByValue(GetRefreshTokenByValueRequest) returns (GetRefreshTokenByValueResponse) {
		option (google.api.http) = {
			post: "/streamfair/v1/get_refresh_token_by_value"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "Get a refresh token by its value.",
			summary: "Get Refresh Token by Value"
		};
	}

	rpc RevokeRefreshTokenByValue(RevokeRefreshTokenByValueRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/streamfair/v1/revoke_refresh_token_by_value"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "Revoke a refresh token by its value.",
			summary: "Revoke Refresh Token by Value"
		};
	}

	rpc RevokeRefreshTokenById(RevokeRefreshTokenByIdRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/streamfair/v1/revoke_refresh_token_by_id"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "Revoke a refresh token by its ID.",
			summary: "Revoke Refresh Token by ID"
		};
	}

	rpc DeleteRefreshTokenById(DeleteRefreshTokenByIdRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/streamfair/v1/delete_refresh_token_by_id"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "Delete a refresh token by its ID.",
			summary: "Delete Refresh Token by ID"
		};
	}
	
	rpc DeleteRefreshTokenByValue(DeleteRefreshTokenByValueRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/streamfair/v1/delete_refresh_token_by_value"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "Delete a refresh token by its value.",
			summary: "Delete Refresh Token by Value"
		};
	}
	
	rpc ListRevokedRefreshTokens(ListRevokedRefreshTokensRequest) returns (ListRevokedRefreshTokensResponse) {
		option (google.api.http) = {
			post: "/streamfair/v1/list_revoked_refresh_tokens"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "List all revoked refresh tokens.",
			summary: "List Revoked Refresh Tokens"
		};
	}

	rpc ListRefreshTokens(ListRefreshTokensRequest) returns (ListRefreshTokensResponse) {
		option (google.api.http) = {
			post: "/streamfair/v1/list_refresh_tokens"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "List all refresh tokens.",
			summary: "List Refresh Tokens"
		};
	}

	rpc UpdateRefreshToken(UpdateRefreshTokenRequest) returns (UpdateRefreshTokenResponse) {
		option (google.api.http) = {
			patch: "/streamfair/v1/update_refresh_token"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "Update a refresh token.",
			summary: "Update Refresh Token"
		};
	}

	rpc VerifyRefreshToken(VerifyRefreshTokenRequest) returns (VerifyRefreshTokenResponse) {
		option (google.api.http) = {
			post: "/streamfair/v1/verify_refresh_token"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description: "Verify a refresh token.",
			summary: "Verify Refresh Token"
		};
	}
}
