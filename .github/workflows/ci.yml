name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes:   10
    env:
      DB_SOURCE_TOKEN_SERVICE_LOCAL: ${{ secrets.DB_SOURCE_TOKEN_SERVICE_LOCAL }}
      DB_SOURCE_TOKEN_SERVICE: ${{ secrets.DB_SOURCE_TOKEN_SERVICE }}
      MIGRATION_URL: ${{ secrets.MIGRATION_URL }}
      HTTP_SERVER_ADDRESS_TOKEN_SERVICE: ${{ secrets.HTTP_SERVER_ADDRESS_TOKEN_SERVICE }}
      GRPC_SERVER_ADDRESS_TOKEN_SERVICE: ${{ secrets.GRPC_SERVER_ADDRESS_TOKEN_SERVICE }}
      TOKEN_SYMMETRIC_KEY: ${{ secrets.TOKEN_SYMMETRIC_KEY }}
      ACCESS_TOKEN_DURATION: ${{ secrets.ACCESS_TOKEN_DURATION }}
      REFRESH_TOKEN_DURATION: ${{ secrets.REFRESH_TOKEN_DURATION }}
      SERVER_NAME: ${{ secrets.SERVER_NAME }}
      CERT_PEM: ${{ secrets.CERT_PEM }}
      KEY_PEM: ${{ secrets.KEY_PEM }}
      CA_CERT_PEM: ${{ secrets.CA_CERT_PEM }}
      CI_ENV: ${{ secrets.CI_ENV }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version:  1.22.0

      - name: Run unit tests
        run: |
          go test -v ./...

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Prepare Environment
        run: |
          mkdir ssl

      - name: Run Docker Compose
        run: |
          docker compose -f docker-compose.ci.yaml up -d --build

      - name: Stop Docker Compose
        run: |
          docker compose down
          docker system prune -a -f